import * as React from "react";
import { unstable_IdGroupOptions, unstable_IdGroupHTMLProps } from "../Id/IdGroup";
import { HiddenStateReturn } from "./HiddenState";
export declare type HiddenOptions = unstable_IdGroupOptions & Pick<Partial<HiddenStateReturn>, "visible" | "unstable_animating" | "unstable_animated" | "unstable_stopAnimation" | "unstable_setIsMounted">;
export declare type HiddenHTMLProps = unstable_IdGroupHTMLProps;
export declare type HiddenProps = HiddenOptions & HiddenHTMLProps;
export declare const useHidden: {
    (options?: HiddenOptions | undefined, htmlProps?: import("..").BoxHTMLProps | undefined): import("..").BoxHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: HiddenOptions, htmlProps: import("..").BoxHTMLProps) => HiddenOptions;
    __propsAreEqual?: ((prev: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<HiddenStateReturn>, "visible" | "unstable_animated" | "unstable_animating" | "unstable_stopAnimation" | "unstable_setIsMounted"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        unstable_wrap?: ((children: React.ReactNode) => JSX.Element) | undefined;
    }, next: import("..").BoxOptions & Pick<Partial<import("..").unstable_IdStateReturn>, "baseId" | "unstable_idCountRef" | "unstable_setBaseId"> & {
        id?: string | undefined;
    } & Pick<Partial<HiddenStateReturn>, "visible" | "unstable_animated" | "unstable_animating" | "unstable_stopAnimation" | "unstable_setIsMounted"> & React.HTMLAttributes<any> & React.RefAttributes<any> & {
        unstable_wrap?: ((children: React.ReactNode) => JSX.Element) | undefined;
    }) => boolean) | undefined;
};
export declare const Hidden: import("reakit-system/src/createComponent").Component<"div", HiddenOptions>;
