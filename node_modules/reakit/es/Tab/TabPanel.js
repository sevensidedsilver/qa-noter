import 'reakit-utils/warning';
import 'react';
import '../Id/IdProvider.js';
import { createComponent } from 'reakit-system/createComponent';
import { createHook } from 'reakit-system/createHook';
import '../Box/Box.js';
import { a as _objectSpread2 } from '../_rollupPluginBabelHelpers-9b9ba5c9.js';
import 'reakit-utils/useAllCallbacks';
import 'reakit-utils/useSealedState';
import 'reakit-utils/cx';
import '../Id/IdState.js';
import '../Id/IdGroup.js';
import 'reakit-utils/useIsomorphicEffect';
import '../Hidden/HiddenState.js';
import { useHidden } from '../Hidden/Hidden.js';
import '../Rover/RoverState.js';
import { a as getTabPanelId, g as getTabId } from '../__utils-0bb901c9.js';
import { useTabState } from './TabState.js';

var useTabPanel = createHook({
  name: "TabPanel",
  compose: useHidden,
  useState: useTabState,
  keys: ["stopId"],
  useOptions: function useOptions(options) {
    return _objectSpread2({
      visible: options.selectedId === options.stopId
    }, options, {
      unstable_setBaseId: undefined
    });
  },
  useProps: function useProps(options, htmlProps) {
    return _objectSpread2({
      role: "tabpanel",
      tabIndex: 0,
      id: getTabPanelId(options.stopId, options.baseId),
      "aria-labelledby": getTabId(options.stopId, options.baseId)
    }, htmlProps);
  }
});
var TabPanel = createComponent({
  as: "div",
  useHook: useTabPanel
});

export { TabPanel, useTabPanel };
