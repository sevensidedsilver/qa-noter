export const fitsOnTop = (viewportOffset) => (elemRect) => elemRect.top > viewportOffset;
export const fitsOnBottom = (viewportOffset) => (elemRect, viewportRect) => elemRect.bottom < viewportRect.height - viewportOffset;
export const fitsOnLeft = (viewportOffset) => (elemRect) => elemRect.left > viewportOffset;
export const fitsOnRight = (viewportOffset) => (elemRect, viewportRect) => elemRect.right < viewportRect.width - viewportOffset;
export const fitsInViewport = (viewportOffset) => (elemRect) => {
    if (elemRect.width === 0 || elemRect.height === 0) {
        return true;
    }
    const viewportRect = {
        width: window.innerWidth,
        height: window.innerHeight,
    };
    return (fitsOnTop(viewportOffset)(elemRect) &&
        fitsOnBottom(viewportOffset)(elemRect, viewportRect) &&
        fitsOnLeft(viewportOffset)(elemRect) &&
        fitsOnRight(viewportOffset)(elemRect, viewportRect));
};
export const getFitOffsets = (viewportOffset) => (elemRect) => {
    const viewportRect = {
        width: window.innerWidth,
        height: window.innerHeight,
    };
    const offsets = {
        x: 0,
        y: 0,
    };
    if (!fitsOnRight(viewportOffset)(elemRect, viewportRect)) {
        offsets.x = viewportRect.width - viewportOffset - elemRect.right;
    }
    if (!fitsOnBottom(viewportOffset)(elemRect, viewportRect)) {
        offsets.y = viewportRect.height - viewportOffset - elemRect.bottom;
    }
    return offsets;
};
//# sourceMappingURL=positionerUtils.js.map